{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\my-app\\\\react\\\\miniproject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false); // Track text visibility\n  const [data, setData] = useState([]); // Store API data\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\") // Fetch data from API\n    .then(response => response.json()).then(json => setData(json.slice(0, 5))) // Store first 5 posts\n    .catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsVisible(!isVisible),\n      children: [isVisible ? \"Hide\" : \"Show\", \" Text\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), isVisible && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is some text that can be toggled.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fetched Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"p1uI56jOE7WZ47s2kp4fVbi1ykU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","isVisible","setIsVisible","data","setData","fetch","then","response","json","slice","catch","error","console","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","body","id","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/my-app/react/miniproject/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst App = () => {\n  const [isVisible, setIsVisible] = useState(false); // Track text visibility\n  const [data, setData] = useState([]); // Store API data\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\") // Fetch data from API\n      .then((response) => response.json())\n      .then((json) => setData(json.slice(0, 5))) // Store first 5 posts\n      .catch((error) => console.error(\"Error fetching data:\", error));\n  }, []);\n\n  return (\n    <div>\n      {/* Toggle Button */}\n      <button onClick={() => setIsVisible(!isVisible)}>\n        {isVisible ? \"Hide\" : \"Show\"} Text\n      </button>\n\n      {/* Show Text When Visible */}\n      {isVisible && <p>This is some text that can be toggled.</p>}\n\n      {/* Fetch and Display API Data */}\n      <h2>Fetched Posts</h2>\n      <ul>\n        {data.map((post) => (\n          <li key={post.id}>\n            <h3>{post.title}</h3>\n            <p>{post.body}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnD,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtCC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,4CAA4C,CAAC,CAAC;IAAA,CACjDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEE,IAAI,IAAKJ,OAAO,CAACI,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAAA,CAC1CC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAAe,QAAA,gBAEEf,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAMZ,YAAY,CAAC,CAACD,SAAS,CAAE;MAAAY,QAAA,GAC7CZ,SAAS,GAAG,MAAM,GAAG,MAAM,EAAC,OAC/B;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAGRjB,SAAS,iBAAIH,OAAA;MAAAe,QAAA,EAAG;IAAsC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAG3DpB,OAAA;MAAAe,QAAA,EAAI;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBpB,OAAA;MAAAe,QAAA,EACGV,IAAI,CAACgB,GAAG,CAAEC,IAAI,iBACbtB,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAAe,QAAA,EAAKO,IAAI,CAACC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBpB,OAAA;UAAAe,QAAA,EAAIO,IAAI,CAACE;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFXE,IAAI,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAClB,EAAA,CAjCID,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}